检查代码的正确性：
	检查一：
		产生一个长度为20随机数组A（允许有重复元素）。
		分别用各种算法对A进行排序并输出排序结果。
		助教会通过比对不同算法的排序结果来初步判断代码的正确性（不同算法的排序结果应当是一致的）。
	检查二：
		产生一个长度为1000的随机数组B（允许有重复元素）。
		分别用各种算法对B进行排序并输出排序结果以及耗费时间。
		使用for循环比对其他算法的排序结果是否与插入排序的结果相同，以True/False的形式输出结果。（不同算法的排序结果应当是一致的）。
	检查三：
		助教会随机抽查1～2个算法，对着代码向助教讲解自己是如何实现算法的，以及对应的时间复杂度分析。
	注意点：
		固定随机数种子（方便复现实验结果）。
		检查一/二中，所有排序算法均是对同一个数组A/B进行排序（待排序的随机数组在最开始就固定下来，不是每次排序前重新生成）。
		助教可能会在检查过程中随机进行提问（用来判定代码是否是自己实现的）。
实验报告说明：
	实验一：
		产生的随机数组允许有重复元素。
		所有排序算法均是对同一个随机数组进行排序（待排序的随机数组在最开始就固定下来，不是每次排序前重新生成）。
	实验二：
		仿造实验一，只需要改变n即可。
		实验报告中画出n-耗费时间折线图。
		插入排序在n比较大的时候可能需要很久才能跑出结果，可酌情减少插入排序的实验。（比如10min以上的可以选择不做）
	实验三：
		被扰乱的数组C在最开始就生成好，后续随机扰乱C即可。
	实验四：
		需要给出各个算法的时间复杂度理论分析，并与实验二进行对比。
其他：
	抄袭代码则双方（不论谁抄谁），本次实验均按0分处理！！！
